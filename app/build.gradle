apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

static def packageTime() {
    return new Date().format("yyyyMMdd-HHmmss", TimeZone.getDefault())
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.lugq.appframedemo"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file('keystore.jks')
            storePassword '123456'
            keyAlias 'appframe'
            keyPassword '123456'
        }
    }
    buildTypes {
        debug {
            buildConfigField("String", "DOMAIN", '"https://api.debug-github.com"')
        }
        beta {
            buildConfigField("String", "DOMAIN", '"https://api.github.com"')
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField("String", "DOMAIN", '"https://api.github.com"')
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // 构建变种版本
    productFlavors {
        flavorDimensions "default"

        // 通用版
        common {
            manifestPlaceholders = [
                    CHANNEL_VALUE: "common"//标识
            ]
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // 定义路径
            //variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/build/outputs/apk/release")
            // 定制文件名
            //outputFileName = "senseU_center_${variant.buildType.name}_${defaultConfig.versionName}_${packageTime()}.apk"

            // 注意：这里不能换行
            //outputFileName = "lugq-" + "${variant.buildType.name}-" + "${defaultConfig.versionName}-" + "${packageTime()}" + ".apk"
            //def fileName =  "lugq-" + "${variant.buildType.name}-" + "${defaultConfig.versionName}-" + "${packageTime()}" + ".apk"

            // 这样写法，方便注释
            def prefix = "lugq-"
            def buildType = "${variant.buildType.name}-"
            def versionName = "${defaultConfig.versionName}-"
            def time = "${packageTime()}"

            outputFileName = prefix + buildType + versionName + time + ".apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'

    // Retrofit库
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // Okhttp库
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    implementation("com.squareup.okhttp3:logging-interceptor:4.7.2")

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    // 添加 lifecycle 依赖库
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.2.0"

    // 工具类库
    implementation 'com.blankj:utilcodex:1.27.2'

    // 权限申请框架
    implementation "org.permissionsdispatcher:permissionsdispatcher:4.7.0"
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:4.7.0"

}
